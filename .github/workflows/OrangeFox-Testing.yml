name: Testing

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'Manifest'
        required: true
        default: ''
        type: choice
        options:
        - https://gitlab.com/OrangeFox/sync.git
      MANIFEST_BRANCH:
        description: 'OrangeFox Branch'
        required: true
        default: '11.0'
        type: choice
        options:
        - 12.1
        - 11.0
        - 10.0
        - 9.0
      DEVICE_TREE:
        description: 'Custom Recovery Tree'
        required: true
        default: 'https://github.com/cd-Spidey/custom_recovery_tree_xiaomi_cannong'
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch'
        required: true
        default: 'fox_12.1'
      DEVICE_PATH:
        description: 'Specify your device path.'
        required: true
        default: 'device/xiaomi/cannong'
      DEVICE_NAME:
        description: 'Specify your Device Codename.'
        required: true
        default: 'cannong'
      MAKEFILE_NAME:
        description: 'Specify your twrp/omni_codename'
        required: true
        default: 'cannong'
      BUILD_TARGET:
        description: 'Specify your Build Target'
        required: true
        default: 'recovery'
        type: choice
        options:
        - boot
        - recovery
        - vendor_boot
      FILE_TO_CHECK:
        description: 'Specify which libs to check'
        required: true
        default: 'system/bin/qseecomd'

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-20.04
    steps:
    - name: Check Out
      uses: actions/checkout@v3.1.0

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
      
    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install make git aria2 libncurses5 curl python-is-python3 adb autoconf automake axel bc bison build-essential ccache clang cmake curl expat fastboot flex g++ g++-multilib gawk gcc gcc-multilib git gnupg gperf htop imagemagick lib32ncurses5-dev lib32z1-dev libtinfo5 libc6-dev libcap-dev libexpat1-dev libgmp-dev '^liblz4-.*' '^liblzma.*' libmpc-dev libmpfr-dev libncurses5-dev libsdl1.2-dev libssl-dev libtool libxml2 libxml2-utils '^lzma.*' lzop maven ncftp ncurses-dev patch patchelf pkg-config pngcrush pngquant python2.7 python-all-dev re2c schedtool squashfs-tools subversion texinfo unzip w3m xsltproc zip zlib1g-dev lzip libxml-simple-perl libswitch-perl apt-utils 
       
    - name: Install Github Cli
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install -y gh

    - name: ADB Rules
      run: |
        sudo curl --create-dirs -L -o /etc/udev/rules.d/51-android.rules -O -L https://raw.githubusercontent.com/M0Rf30/android-udev-rules/master/51-android.rules
        sudo chmod 644 /etc/udev/rules.d/51-android.rules
        sudo chown root /etc/udev/rules.d/51-android.rules
        sudo systemctl restart udev

    - name: Install OpenJDK
      uses: actions/setup-java@v3.5.1
      with:
        distribution: 'zulu'
        java-version: '8'
        
    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Clone Sync Script
      run: |
        mkdir fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        cd fox_${{ github.event.inputs.MANIFEST_BRANCH }}
        echo "workdir=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "Carlo Dandan"
        git config --global user.email "jasminecarlo01@gmail.com"
        git clone https://gitlab.com/OrangeFox/sync.git
      id: pwd

    - name: Sync OFRP Sources
      run: |
        cd sync
        ./orangefox_sync.sh --branch 10.0 --path ${GITHUB_WORKSPACE}/fox_12.1
        ./orangefox_sync.sh --branch ${{ github.event.inputs.MANIFEST_BRANCH }} --path ${GITHUB_WORKSPACE}/fox_${{ github.event.inputs.MANIFEST_BRANCH }}
      working-directory: fox_${{ github.event.inputs.MANIFEST_BRANCH }}
      continue-on-error: true

    - name: Clone Device Tree
      run: |
        git clone ${{ github.event.inputs.DEVICE_TREE }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}
      working-directory: ${{ steps.pwd.outputs.workdir }}


    - name: Building Custom Recovery
      run: |
        source build/envsetup.sh
        hmm
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng && mka adbd ${{ github.event.inputs.BUILD_TARGET }}image
      working-directory: ${{ steps.pwd.outputs.workdir }}
      
    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.img
          fox_${{ github.event.inputs.MANIFEST_BRANCH }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/OrangeFox*.zip
        name: Unofficial OrangeFox for ${{ github.event.inputs.DEVICE_NAME }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: unofficial-fox_${{ github.event.inputs.MANIFEST_BRANCH }}-${{ github.event.inputs.DEVICE_NAME }}.img

    - name: Run LDCheck
      run: |
        cd workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery/root
        python3 ldcheck -p system/lib64:vendor/lib64 -d ${{ github.event.inputs.FILE_TO_CHECK }}
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
